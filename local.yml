version: "3"

services:

  backend-trfine-local:
    container_name: backend-trfine-local
    build:
      context: .
      dockerfile: ./compose/go/Dockerfile
    volumes:
      - ./app/:/app:z
    env_file:
      - ./.envs/.local/.app
    ports:
     - "8000:8000"
    depends_on:
      - postgres-trfine-local
      - redis-trfine-local
    networks:
      - trfine_network
    command: ["go", "run", "/app/cmd/main/main.go"]

  redis-trfine-local:
    container_name: redis-trfine
    image: redis:7
    env_file:
      - ./.envs/.local/.app
    ports:
      - "6379:6379"
    networks:
      - trfine_network

  redis-commander-trfine-local:
    container_name: redis-commander-trfine-local
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    env_file:
      - ./.envs/.local/.app
    ports:
      - "8081:8081"
    networks:
      - trfine_network

  postgres-trfine-local:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    image: trfine_system_pg
    container_name: postgres-trfine-local
    command: postgres -c 'max_connections=1000'
    ports:
      - "5432:5432"
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.app
    networks:
      - trfine_network

  pgadmin-trfine-local:
    container_name: pgadmin-trfine-local
    image: dpage/pgadmin4
    ports:
      - "5050:5050"
    depends_on:
      - backend-trfine-local
    env_file:
      - ./.envs/.local/.app
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - trfine_network

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  pgadmin-data: {}

networks:
  trfine_network: